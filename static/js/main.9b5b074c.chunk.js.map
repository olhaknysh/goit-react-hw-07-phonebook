{"version":3,"sources":["redux/contacts/contacts-actions.js","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","redux/filter/filter-actions.js","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","redux/contacts/contacts-reducer.js","redux/filter/filter-reducer.js","redux/store.js","index.js"],"names":["addNewContact","createAction","name","number","payload","id","uuidv4","deleteContact","useStyles","createUseStyles","contact","display","justifyContent","marginBottom","button","marginLeft","connect","state","contacts","items","dispatch","onDelete","actions","classes","className","type","onClick","filter","normalisedFilter","toLowerCase","includes","visibleContacts","map","form","flexDirection","label","labelName","marginRight","initialValue","onSubmit","useState","setState","handleChange","e","prevState","target","value","checkPossibleRepeat","newName","isNameExist","find","alert","preventDefault","onChange","pattern","title","required","setFilter","onFilterChange","container","alignItems","marginTop","Container","children","App","contactsReducer","createReducer","filterReducer","_","persistConfig","key","storage","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9b5b074c.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addNewContact = createAction(\n  'contacts/addcontact',\n  ({ name, number }) => ({\n    payload: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  }),\n);\nexport const deleteContact = createAction('contacts/delete');\n","import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nconst useStyles = createUseStyles({\n  contact: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 5,\n  },\n  button: {\n    marginLeft: 10,\n  },\n});\n\nconst ContactListItem = ({ id, name, number, onDelete }) => {\n  const classes = useStyles();\n  const handleDelete = () => onDelete(id);\n\n  return (\n    <li className={classes.contact}>\n      <p>\n        {name} : {number}\n      </p>\n      <button className={classes.button} type=\"button\" onClick={handleDelete}>\n        X\n      </button>\n    </li>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(actions.deleteContact(id)),\n});\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ContactListItem from './ContactListItem';\n\nconst ContactList = ({ contacts, filter }) => {\n  const visibleContacts = () => {\n    if (filter) {\n      const normalisedFilter = filter.toLowerCase();\n      const filteredContacts = contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalisedFilter),\n      );\n      return filteredContacts;\n    }\n\n    return contacts;\n  };\n\n  return (\n    <ul>\n      {visibleContacts().map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.items,\n  filter: state.filter,\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n};\n\nexport default connect(mapStateToProps)(ContactList);\n","import { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nconst useStyles = createUseStyles({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  label: {\n    marginBottom: 10,\n  },\n  labelName: {\n    marginRight: 8,\n  },\n});\n\nconst initialValue = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = ({ contacts, onSubmit }) => {\n  const [state, setState] = useState(initialValue);\n  const { name, number } = state;\n  const classes = useStyles();\n\n  const handleChange = e => {\n    setState(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!checkPossibleRepeat(name)) {\n      onSubmit({\n        name,\n        number,\n      });\n    }\n\n    setState(initialValue);\n  };\n\n  const checkPossibleRepeat = newName => {\n    const isNameExist = !!contacts.find(contact => contact.name === newName);\n\n    if (isNameExist) {\n      alert(`${newName} is already in contacts.`);\n    }\n    return isNameExist;\n  };\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit}>\n      <label className={classes.label}>\n        <span className={classes.labelName}>Name</span>\n        <input\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={classes.label}>\n        <span className={classes.labelName}>Phone</span>\n        <input\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(actions.addNewContact(contact)),\n});\n\nContactForm.propTypes = {\n  contacts: PropTypes.array,\n  onSubmit: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const setFilter = createAction('filter/setFilter');\n","import { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filter-actions';\n\nconst useStyles = createUseStyles({\n  filter: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  label: {\n    marginBottom: 10,\n  },\n});\n\nconst Filter = ({ onFilterChange }) => {\n  const [state, setState] = useState('');\n  const classes = useStyles();\n\n  const handleFilterChange = e => {\n    const value = e.target.value;\n\n    onFilterChange(value);\n    setState(value);\n  };\n\n  return (\n    <>\n      <label className={classes.filter}>\n        <span className={classes.label}>Find contacts by name</span>\n        <input value={state} onChange={handleFilterChange} type=\"text\" />\n      </label>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFilterChange: filter => dispatch(setFilter(filter)),\n});\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    marginTop: 40,\n  },\n});\n\nconst Container = ({ children }) => {\n  const classes = useStyles();\n\n  return <div className={classes.container}>{children}</div>;\n};\n\nexport default Container;\n","import ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\n\nconst App = () => (\n  <Container>\n    <h1>Phonebook</h1>\n    <ContactForm />\n\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactList />\n  </Container>\n);\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contacts-actions';\n\nconst contactsReducer = createReducer([], {\n  [actions.addNewContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nexport default contactsReducer;\n","import { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './filter-actions';\n\nconst filterReducer = createReducer('', {\n  [actions.setFilter]: (_, { payload }) => payload,\n});\n\nexport default filterReducer;\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport contactsReducer from './contacts/contacts-reducer';\nimport filterReducer from './filter/filter-reducer';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  items: contactsReducer,\n  filter: filterReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}