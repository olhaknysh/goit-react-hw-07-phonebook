{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactListItem.jsx","components/ContactList/ContactListItem.container.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.jsx","components/ContactForm/ContactForm.jsx","components/ContactForm/ContactForm.container.jsx","redux/filter/filter-actions.js","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","redux/contacts/contacts-reducer.js","redux/filter/filter-reducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsFailure","addContactsRequest","addContactsSuccess","addContactsFailure","deleteContactsRequest","deleteContactsSuccess","deleteContactsFailure","axios","defaults","baseURL","dispatch","a","get","data","message","contact","name","number","newContact","post","contactId","delete","getContacts","state","items","contacts","getFilter","filter","getIsLoading","loading","getError","error","getVisibleContacts","createSelector","normalisedFilter","toLowerCase","includes","useStyles","createUseStyles","display","justifyContent","marginBottom","button","marginLeft","ContactListItem","id","onDelete","classes","className","type","onClick","connect","contactSelectors","contactOperations","ContactList","fetchContacts","useEffect","map","form","flexDirection","label","labelName","marginRight","loader","position","bottom","color","fontSize","initialValue","ContactForm","onSubmit","useState","setState","handleChange","e","prevState","target","value","checkPossibleRepeat","newName","isNameExist","find","alert","preventDefault","onChange","pattern","title","required","setFilter","onFilterChange","container","alignItems","marginTop","Container","children","App","createReducer","_","payload","combineReducers","filterReducer","actions","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b496decf.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\n\nexport const fetchContactsFailure = createAction(\n  'contacts/fetchContactsFailure',\n);\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsFailure = createAction('contacts/addContactsFailure');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactsSuccess',\n);\nexport const deleteContactsFailure = createAction(\n  'contacts/deleteContactsFailure',\n);\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsFailure,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsFailure,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsFailure,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsFailure(error.message));\n  }\n};\n\nconst addContact = contact => async dispatch => {\n  const { name, number } = contact;\n  const newContact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactsRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', newContact);\n    dispatch(addContactsSuccess(data));\n  } catch (error) {\n    dispatch(addContactsFailure(error.message));\n  }\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(deleteContactsRequest());\n\n  try {\n    const deleted = await axios.delete(`/contacts/${contactId}`);\n    if (deleted) {\n      dispatch(deleteContactsSuccess(contactId));\n    }\n  } catch (error) {\n    dispatch(deleteContactsFailure(error.message));\n  }\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.items.contacts;\n\nconst getIsLoading = state => state.items.loading;\n\nconst getError = state => state.items.error;\n\nconst getFilter = state => state.filter;\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalisedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalisedFilter),\n    );\n  },\n);\n\nexport default {\n  getContacts,\n  getIsLoading,\n  getError,\n  getFilter,\n  getVisibleContacts,\n};\n","import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  contact: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 5,\n  },\n  button: {\n    marginLeft: 10,\n  },\n});\n\nconst ContactListItem = ({ id, name, number, onDelete }) => {\n  const classes = useStyles();\n  const handleDelete = () => onDelete(id);\n\n  return (\n    <li className={classes.contact}>\n      <p>\n        {name} : {number}\n      </p>\n      <button className={classes.button} type=\"button\" onClick={handleDelete}>\n        X\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import { connect } from 'react-redux';\nimport contactOperations from '../../redux/contacts/contacts-operations';\nimport contactSelectors from '../../redux/contacts/contacts-selectors';\n\nimport ContactListItem from './ContactListItem';\n\nconst mapStateToProps = state => ({\n  contacts: contactSelectors.getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ContactListItem from './ContactListItem.container';\n\nconst ContactList = ({ contacts, fetchContacts }) => {\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  fetchContacts: PropTypes.func,\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport contactOperations from '../../redux/contacts/contacts-operations';\nimport contactSelectors from '../../redux/contacts/contacts-selectors';\n\nimport ContactList from './ContactList';\n\nconst mapStateToProps = state => ({\n  contacts: contactSelectors.getVisibleContacts(state),\n  filter: contactSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport PropTypes from 'prop-types';\n\nconst useStyles = createUseStyles({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  label: {\n    marginBottom: 10,\n  },\n  labelName: {\n    marginRight: 8,\n  },\n  loader: {\n    position: 'absolute',\n  },\n  error: {\n    position: 'fixed',\n    bottom: 20,\n    color: 'red',\n    fontSize: '26px',\n  },\n});\n\nconst initialValue = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = ({ contacts, loading, error, onSubmit }) => {\n  const [state, setState] = useState(initialValue);\n  const { name, number } = state;\n  const classes = useStyles();\n\n  const handleChange = e => {\n    setState(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!checkPossibleRepeat(name)) {\n      onSubmit({\n        name,\n        number,\n      });\n    }\n\n    setState(initialValue);\n  };\n\n  const checkPossibleRepeat = newName => {\n    const isNameExist = !!contacts.find(contact => contact.name === newName);\n\n    if (isNameExist) {\n      alert(`${newName} is already in contacts.`);\n    }\n    return isNameExist;\n  };\n\n  return (\n    <>\n      <form className={classes.form} onSubmit={handleSubmit}>\n        <label className={classes.label}>\n          <span className={classes.labelName}>Name</span>\n          <input\n            value={name}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label className={classes.label}>\n          <span className={classes.labelName}>Phone</span>\n          <input\n            value={number}\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n      {loading && <p className={classes.loader}>Loading...</p>}\n      {error && <p className={classes.error}>{error}</p>}\n    </>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.array,\n  onSubmit: PropTypes.func,\n  loading: PropTypes.bool,\n  error: PropTypes.string,\n};\n\nexport default ContactForm;\n","import { connect } from 'react-redux';\nimport contactOperations from '../../redux/contacts/contacts-operations';\nimport contactSelectors from '../../redux/contacts/contacts-selectors';\n\nimport ContactForm from './ContactForm';\n\nconst mapStateToProps = state => ({\n  contacts: contactSelectors.getContacts(state),\n  loading: contactSelectors.getIsLoading(state),\n  error: contactSelectors.getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(contactOperations.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const setFilter = createAction('filter/setFilter');\n","import { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filter-actions';\n\nconst useStyles = createUseStyles({\n  filter: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  label: {\n    marginBottom: 10,\n  },\n});\n\nconst Filter = ({ onFilterChange }) => {\n  const [state, setState] = useState('');\n  const classes = useStyles();\n\n  const handleFilterChange = e => {\n    const value = e.target.value;\n\n    onFilterChange(value);\n    setState(value);\n  };\n\n  return (\n    <>\n      <label className={classes.filter}>\n        <span className={classes.label}>Find contacts by name</span>\n        <input value={state} onChange={handleFilterChange} type=\"text\" />\n      </label>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFilterChange: filter => dispatch(setFilter(filter)),\n});\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    marginTop: 40,\n  },\n});\n\nconst Container = ({ children }) => {\n  const classes = useStyles();\n\n  return <div className={classes.container}>{children}</div>;\n};\n\nexport default Container;\n","import ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\n\nconst App = () => (\n  <Container>\n    <h1>Phonebook</h1>\n    <ContactForm />\n\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactList />\n  </Container>\n);\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsFailure,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsFailure,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsFailure,\n} from './contacts-actions';\n\nexport const contacts = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsFailure]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsFailure]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsFailure]: () => false,\n});\n\nconst error = createReducer('', {\n  [fetchContactsFailure]: (_, { payload }) => payload,\n  [addContactsFailure]: (_, { payload }) => payload,\n  [deleteContactsFailure]: (_, { payload }) => payload,\n  [fetchContactsSuccess]: () => '',\n  [addContactsSuccess]: () => '',\n  [deleteContactsSuccess]: () => '',\n});\n\nexport default combineReducers({\n  contacts,\n  loading,\n  error,\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './filter-actions';\n\nconst filterReducer = createReducer('', {\n  [actions.setFilter]: (_, { payload }) => payload,\n});\n\nexport default filterReducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport contactReducer from './contacts/contacts-reducer';\nimport filterReducer from './filter/filter-reducer';\n\nexport const store = configureStore({\n  reducer: {\n    items: contactReducer,\n    filter: filterReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}